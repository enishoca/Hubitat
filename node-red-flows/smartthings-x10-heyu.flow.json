[
  {
      "id": "4a055162.7f481",
      "type": "tab",
      "label": "Smartthings X10 Heyu Connector",
      "disabled": false,
      "info": ""
  },
  {
      "id": "75a0df1d.912dd",
      "type": "function",
      "z": "4a055162.7f481",
      "name": "Parse heyu Messages",
      "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['X10NodeRed'] = 'DeviceUpdate';\n \n \n\nconst inLines =  msg.payload;  \n//return {payload: stringBuf.toString()};\nnode.warn(\"in - \" + inLines);\n\nvar lastCodeSeen = context.get(\"lastCodeSeen\");\nif(typeof lastCodeSeen == \"undefined\") {\n    lastCodeSeen = {\n        housecode: \"x\",\n        unitcode: \"0\"\n    };\n    context.set(\"lastCodeSeen\", lastCodeSeen);\n}\n\ntry {\n\n    var eventData, m;\n    //05/30 20:59:20 Tx PL HouseUnit: P1\n    //02/20 22:27:04 rcvi addr unit 4 : hu B4 (no_alias)\n    //02/20 22:27:04 rcvi func On : hc B\n    //02/20 22:27:13 rcvi addr unit 4 : hu B4 (no_alias)\n    //02/20 22:27:13 rcvi func Off : hc B\n    \n    //03/10 12:21:43 rcvi addr unit 2 : hu B2 (no_alias)\n    //03/10 12:21:43 rcvi func On : hc B\n    //03/10 12:22:24 rcvi func Dim : hc B dim %11 [24]\n    //03/10 12:22:34 rcvi func Bright : hc B bright %12 [25]\n    \n node.log(\"t1\");\n    if (m = /^\\d{2}\\/\\d{2}\\s+(?:\\d{2}:){2}\\d{2}\\s+rcvi addr unit\\s+\\d+\\s+:\\s+hu\\s+([a-pA-P])(\\d{1,2})/m.exec(inLines)) {\n         \n        lastCodeSeen.housecode = m[1].toLowerCase().trim();\n        lastCodeSeen.unitcode = parseInt(m[2].trim(), 10);\n        node.warn(\"m1a - \"+ lastCodeSeen.housecode +\":\" +  lastCodeSeen.unitcode);\n        context.set(\"lastCodeSeen\", lastCodeSeen);\n    }\n    //if (m = /\\d{2}\\/\\d{2}\\s+(?:\\d{2}:){2}\\d{2}\\srcvi\\s+func:\\s+(On|Off)\\s+:\\s+hc\\s+([a-pA-P])\\s/m.exec(inLines))) {\n\n    if (lastCodeSeen.housecode && lastCodeSeen.unitcode && (m = /^\\d{2}\\/\\d{2}\\s+(?:\\d{2}:){2}\\d{2}\\s+rcvi\\s+func\\s+(On|Off|Dim|Bright)\\s+:\\s+hc\\s+([a-pA-P])/m.exec(inLines))) {\n        node.warn(\"m2\");\n        eventData = {\n            \n            protocol: \"*\",\n            direction: \"*\",\n            housecode: m[2].toLowerCase().trim(),\n            unitcode: null,\n            state: m[1].toLowerCase().trim()\n            \n        };\n        node.warn(\"m2a - \"+ eventData.housecode +\":\" +  eventData.state);\n        if (eventData.housecode === lastCodeSeen.housecode) {\n            eventData.unitcode = lastCodeSeen.unitcode;\n            msg.payload = JSON.stringify(eventData);\n            msg.headers['eventData'] = msg.payload;\n            return msg; //{payload: JSON.stringify(eventData)};\n        }\n    }\n}\n \ncatch(err) {\n   return null; //ignore the exception, its probably a message we don't understand\n   //node.error(\"exception in parsing: \" + err.message); \n} \n  \nreturn null;\n\n",
      "outputs": 1,
      "noerr": 0,
      "x": 440,
      "y": 220,
      "wires": [
          [
              "d2d937fa.c385b8",
              "712c47d8.27cd68"
          ]
      ]
  },
  {
      "id": "75ab7d94.027ee4",
      "type": "http in",
      "z": "4a055162.7f481",
      "name": "/register",
      "url": "/register",
      "method": "get",
      "upload": false,
      "swaggerDoc": "",
      "x": 68,
      "y": 490,
      "wires": [
          [
              "1cc2a590.66898a",
              "a78511ef.f5c62"
          ]
      ]
  },
  {
      "id": "37a05369.fbf42c",
      "type": "http response",
      "z": "4a055162.7f481",
      "name": "Send respone to ST",
      "statusCode": "",
      "headers": {},
      "x": 716,
      "y": 532,
      "wires": []
  },
  {
      "id": "b966cff5.be82c",
      "type": "http request",
      "z": "4a055162.7f481",
      "name": "http request to ST",
      "method": "POST",
      "ret": "txt",
      "url": "",
      "tls": "",
      "x": 730,
      "y": 160,
      "wires": [
          []
      ]
  },
  {
      "id": "a509a4c1.ef8708",
      "type": "debug",
      "z": "4a055162.7f481",
      "name": "",
      "active": false,
      "console": "false",
      "complete": "true",
      "x": 910,
      "y": 220,
      "wires": []
  },
  {
      "id": "afa72f65.36a29",
      "type": "file in",
      "z": "4a055162.7f481",
      "name": "Read ST setting after restart",
      "filename": "/home/pi/.red-st-connect.conf",
      "format": "utf8",
      "chunk": false,
      "sendError": false,
      "x": 366.5,
      "y": 80,
      "wires": [
          [
              "fdc6bef8.caf8a"
          ]
      ]
  },
  {
      "id": "49e6e678.d04d18",
      "type": "inject",
      "z": "4a055162.7f481",
      "name": "Startup",
      "topic": "",
      "payload": "",
      "payloadType": "date",
      "repeat": "",
      "crontab": "",
      "once": true,
      "x": 100,
      "y": 81,
      "wires": [
          [
              "afa72f65.36a29",
              "ecef0fd0.dca69"
          ]
      ]
  },
  {
      "id": "a78511ef.f5c62",
      "type": "file",
      "z": "4a055162.7f481",
      "name": "Persist ST settings to File",
      "filename": "/home/pi/.red-st-connect.conf",
      "appendNewline": false,
      "createDir": true,
      "overwriteFile": "true",
      "x": 316.5,
      "y": 459,
      "wires": []
  },
  {
      "id": "2a323a5c.9622b6",
      "type": "comment",
      "z": "4a055162.7f481",
      "name": "setup config file path",
      "info": "If you are not running as pi or /home/pi is\nnot writable change the location of where\nthis flow will read and write ST settings\nsettigns will be stored in /home/pi/.red-st-connect.conf",
      "x": 348,
      "y": 43,
      "wires": []
  },
  {
      "id": "fdc6bef8.caf8a",
      "type": "function",
      "z": "4a055162.7f481",
      "name": "Set ST Settings in global context",
      "func": "try {\n    var STsettings = JSON.parse(msg.payload);\n    if (typeof obj !== 'string' ) \n        global.set(\"STsettings\", STsettings);\n} catch (e) {\n    // ignore errors\n}\n\nmsg.payload = \"Smartthings settings: \" + JSON.stringify (STsettings);\n\nreturn msg\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "x": 674,
      "y": 80,
      "wires": [
          []
      ]
  },
  {
      "id": "d2d937fa.c385b8",
      "type": "function",
      "z": "4a055162.7f481",
      "name": "Setup http request",
      "func": "\n// if you want to hard code the url to ST uncomment these two lines and\n// delete or comment out the rest of the lines in this node\n// msg.url. = \"http://ip_address_of_Smartthings_hub:39500/\";\n// return msg;\n\nvar STsettings = global.get(\"STsettings\");\nif(typeof STsettings == \"undefined\") {\n    node.error(\"Can't continue. Don't know where Smartthings hub is.\");\n    return null;\n}\nnode.log(\"Please ignore the message properties override warning\");\nmsg.url =\"http://\" + STsettings.ip_for_st + \":\" + STsettings.port_for_st;\nreturn msg;\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "x": 670,
      "y": 220,
      "wires": [
          [
              "a509a4c1.ef8708",
              "b966cff5.be82c"
          ]
      ]
  },
  {
      "id": "1cc2a590.66898a",
      "type": "function",
      "z": "4a055162.7f481",
      "name": "Registration response",
      "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['X10NodeRed'] = 'Registered';\nmsg.payload =  {\"X10NodeRed\":\"Registered\"};\nreturn msg;\n",
      "outputs": 1,
      "noerr": 0,
      "x": 310,
      "y": 532,
      "wires": [
          [
              "37a05369.fbf42c"
          ]
      ]
  },
  {
      "id": "ef88e3b5.f1d53",
      "type": "comment",
      "z": "4a055162.7f481",
      "name": "setup heyu path",
      "info": "Here you should setup the path to heyu\n",
      "x": 220,
      "y": 260,
      "wires": []
  },
  {
      "id": "c232fe69.0c76e",
      "type": "comment",
      "z": "4a055162.7f481",
      "name": "setup config file path",
      "info": "If you are not running as pi or /home/pi is\nnot writable change the location of where\nthis flow will read and write ST settings\nsettigns will be stored in /home/pi/.red-st-connect.conf",
      "x": 310,
      "y": 416,
      "wires": []
  },
  {
      "id": "67a27bd6.54c784",
      "type": "comment",
      "z": "4a055162.7f481",
      "name": "setup heyu path",
      "info": "Here you should setup the path to heyu\n",
      "x": 480,
      "y": 700,
      "wires": []
  },
  {
      "id": "ecef0fd0.dca69",
      "type": "exec",
      "z": "4a055162.7f481",
      "command": "/usr/local/bin/heyu",
      "addpay": false,
      "append": "monitor",
      "useSpawn": "true",
      "timer": "",
      "oldrc": false,
      "name": "heyu monitor",
      "x": 210,
      "y": 320,
      "wires": [
          [
              "75a0df1d.912dd",
              "712c47d8.27cd68"
          ],
          [
              "712c47d8.27cd68"
          ],
          [
              "712c47d8.27cd68"
          ]
      ]
  },
  {
      "id": "80eb2250.fa183",
      "type": "http in",
      "z": "4a055162.7f481",
      "name": "/push",
      "url": "/push",
      "method": "get",
      "upload": false,
      "swaggerDoc": "",
      "x": 70,
      "y": 740,
      "wires": [
          [
              "f4b75144.7cb9a"
          ]
      ]
  },
  {
      "id": "f4b75144.7cb9a",
      "type": "function",
      "z": "4a055162.7f481",
      "name": "parse send message",
      "func": "var jsonText = JSON.stringify(msg.payload); \nvar obj = JSON.parse(jsonText);\n\n//{\"device\":\"RF-A3\",\"action\":\"off\"}\n//{\"device\":\"RF-A3-dim|bright\",\"action\":3}\n\nif (typeof obj !== 'string' ) {\n    var device = \"\";\n        \n        \n    // heyu on b2\n    // heyu off b2\n    // heyu fon a1\n    // heyu dim b2 12\n    // heyu bright b2 5\n    // heyu fbright b2\n    // heyu fdim b2\n    \n    msg.payload  = \" \";\n    msg.payload += obj.device.substring(0,2) == \"RF\" ? \" f\" :\" \"; \n    if ((obj.action == \"on\") || (obj.action == \"off\"))\n    {\n        device = obj.device.substring(3);\n        msg.payload += obj.action+\" \" + device.toLowerCase() + \"\\n\";\n    } else {\n        \n      var fields = obj.device.split('-');\n      msg.payload += fields[2] + \" \" + fields[1].toLowerCase() + \" \" +  obj.action + \"\\n\";\n    }\n    \n    return msg;\n}",
      "outputs": 1,
      "noerr": 0,
      "x": 260,
      "y": 740,
      "wires": [
          [
              "7fbe2db0.aa5b54",
              "1af5db55.b43085",
              "df9fcc2.c2c3a3"
          ]
      ]
  },
  {
      "id": "bde5f1ae.d5848",
      "type": "debug",
      "z": "4a055162.7f481",
      "name": "",
      "active": true,
      "console": false,
      "complete": "true",
      "x": 750,
      "y": 740,
      "wires": []
  },
  {
      "id": "7fbe2db0.aa5b54",
      "type": "exec",
      "z": "4a055162.7f481",
      "command": "/usr/local/bin/heyu",
      "addpay": true,
      "append": " ",
      "useSpawn": "false",
      "timer": "",
      "oldrc": false,
      "name": "send command to heyu",
      "x": 510,
      "y": 740,
      "wires": [
          [
              "bde5f1ae.d5848"
          ],
          [
              "bde5f1ae.d5848"
          ],
          [
              "bde5f1ae.d5848"
          ]
      ]
  },
  {
      "id": "1af5db55.b43085",
      "type": "debug",
      "z": "4a055162.7f481",
      "name": "",
      "active": true,
      "console": false,
      "complete": "payload",
      "x": 470,
      "y": 860,
      "wires": []
  },
  {
      "id": "712c47d8.27cd68",
      "type": "debug",
      "z": "4a055162.7f481",
      "name": "",
      "active": true,
      "console": false,
      "complete": "payload",
      "x": 650,
      "y": 320,
      "wires": []
  },
  {
      "id": "df9fcc2.c2c3a3",
      "type": "function",
      "z": "4a055162.7f481",
      "name": "OK response",
      "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.payload =  {\"X10NodeRed\":\"OK\"};\nreturn msg;\n",
      "outputs": 1,
      "noerr": 0,
      "x": 490,
      "y": 620,
      "wires": [
          [
              "37a05369.fbf42c"
          ]
      ]
  }
]